#FROM gar-registry.caas.intel.com/virtiot/nvr:nvr-aibox-vaapi-final
#FROM gar-registry.caas.intel.com/virtiot/vaapi-dxg:clean_latest
FROM gar-registry.caas.intel.com/virtiot/nvr:v2.0_blueprint-v1.1_PTA-ADL-20220804

USER root

ENV FTP_PROXY=http://proxy-chain.intel.com:911 \
ftp_proxy=http://proxy-chain.intel.com:911 \
HTTP_PROXY=http://proxy-chain.intel.com:911 \
http_proxy=http://proxy-chain.intel.com:911 \
HTTPS_PROXY=http://proxy-chain.intel.com:912 \
https_proxy=http://proxy-chain.intel.com:912 \
SOCKS_PROXY=http://proxy-chain.intel.com:1080 \
no_proxy=10.0.0.0/8,192.168.0.0/16,localhost,.local,127.0.0.0/8,af01p-png.devtools.intel.com,ubit-artifactory-or.intel.com \
NO_PROXY=10.0.0.0/8,192.168.0.0/16,localhost,.local,127.0.0.0/8,af01p-png.devtools.intel.com,ubit-artifactory-or.intel.com

RUN apt update && \
apt install -y vainfo gdb x11-apps wget clinfo strace vim git xvfb jq

WORKDIR /root
RUN wget https://github.com/aler9/rtsp-simple-server/releases/download/v0.19.3/rtsp-simple-server_v0.19.3_linux_amd64.tar.gz && \
tar -xvf rtsp-simple-server_v0.19.3_linux_amd64.tar.gz


COPY hello /home/dlstreamer/hello
COPY intel /home/dlstreamer/intel

#RUN source /opt/intel/openvino/setupvars.sh && \
#python3 -m pip install --upgrade pip && \
#python3 -m pip install --ignore-installed openvino-dev[onnx]
#ENV MODELS_PATH=/root
#RUN source /opt/intel/openvino/setupvars.sh && \
#/opt/intel/dlstreamer/setupvars.sh && \
#/opt/intel/dlstreamer/samples/download_models.sh

RUN pip3 install -U meson==0.54.2 mako && \
apt update && apt install -y glslang-tools llvm ninja-build \
libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev libxcb-shm0-dev \
libxshmfence-dev

#RUN git clone https://gitlab.freedesktop.org/mesa/mesa.git /root/mesa && \
COPY mesa /root/mesa
RUN cd /root/mesa && \
meson build -Dgallium-drivers=d3d12,swrast -Dplatforms=x11 -Dgallium-va=enabled -Dglx=xlib -Dvideo-codecs=h264dec,h264enc,h265dec,h265enc && \
ninja -C build
#meson build -Dgallium-drivers=d3d12,swrast -Dplatforms=x11 -Dgallium-va=enabled -Dglx=xlib -Dvideo-codecs=h264dec,h264enc,h265dec,h265enc -Dbuildtype=debug && \

WORKDIR /root
# Build Dlstreamer
RUN apt install -y python3-virtualenv && \
python3 -m pip install virtualenv
RUN git clone -b v1.6 https://github.com/dlstreamer/dlstreamer.git
COPY docker/patches/0001-perf-count-for-v1.6.patch /root/dlstreamer/0001-perf-count-for-v1.6.patch
COPY docker/patches/0002-fix-python-videoinfo.patch /root/dlstreamer/0002-fix-python-videoinfo.patch
COPY docker/patches/0001-VAMemory.patch /root/dlstreamer/0001-VAMemory.patch
WORKDIR /root/dlstreamer
RUN git apply 0001-perf-count-for-v1.6.patch && \
git apply 0002-fix-python-videoinfo.patch
#RUN git apply 0001-VAMemory.patch
RUN sed -i 's/VA_PROGRESSIVE/0/g' src/vaapi/video_preproc_vaapi/video_preproc_vaapi.cpp && \
sed -i 's/VA_PROGRESSIVE/0/g' inference_backend/image_inference/async_with_va_api/va_api_wrapper/vaapi_context.cpp
RUN mkdir -p build && cd /root/dlstreamer/build && \
virtualenv -p /usr/bin/python3 .env3 --system-site-packages \
    && source .env3/bin/activate \
    && source /opt/intel/oneapi/compiler/latest/env/vars.sh \
    && source /opt/intel/openvino/setupvars.sh \
    && cmake -DCMAKE_INSTALL_PREFIX=/opt/intel/dlstreamer -DTREAT_WARNING_AS_ERROR=OFF -DENABLE_VAAPI=ON -DENABLE_PERF_CAL=ON .. \
    && env -u no_proxy make -j`nproc` \
    && make install
COPY docker/patches/dlstreamer_setupvars.sh /opt/intel/dlstreamer/setupvars.sh

# WA for BPS issue
COPY applications.iot.workloads.common-lib/bps /root/applications.iot.workloads.common-lib/bps
RUN cd /root/applications.iot.workloads.common-lib/bps \
    && rm -rf build \
    && mkdir -p build \
    && cd build \
    && cmake .. \
    && make \
    && cp /root/applications.iot.workloads.common-lib/bps/build/gstreamer-1.0/libgstbufferspersecond.so /home/kpi/libs


RUN apt install -y graphviz libgraphviz-dev \
octave epstool babeltrace gtk-doc-tools && \
git clone https://github.com/RidgeRun/gst-shark /root/gst-shark && \
cd /root/gst-shark && \
./autogen.sh --prefix /usr/ --libdir /usr/lib/x86_64-linux-gnu && \
make && make install

COPY verbose_debug_layer_d3d12 /root/verbose_debug_layer_d3d12

COPY VER6-va-sharing /home/kpi/NEO
RUN dpkg -i /home/kpi/NEO/*deb && \
cp /usr/lib/x86_64-linux-gnu/intel-opencl/libigdrcl.so /home/kpi/NEO/libigdrcl.so.old && \
cp /home/kpi/NEO/libigdrcl.so /usr/lib/x86_64-linux-gnu/intel-opencl/libigdrcl.so

COPY gstreamer /root/gstreamer
RUN cd /root/gstreamer && \
git checkout 1.20.2 && \
pip3 install meson==0.59 && \
meson build -Dprefix=/usr -Dlibdir=/usr/lib/x86_64-linux-gnu -Dbuildtype=debug \
-Dvaapi=enabled -Dgstreamer-vaapi:x11=enabled -Dgstreamer-vaapi:drm=enabled -Dgstreamer-vaapi:encoders=enabled && \
ninja -C build && \
ninja -C build install

#RUN sed -i '/cd \${WKLD_DIR}/d' /home/kpi/run.sh
ENV LIBVA_DRIVERS_PATH=/root/mesa/build/src/gallium/targets/va \
LIBVA_DRIVER_NAME=libgallium \
LD_LIBRARY_PATH=/usr/lib/wsl/lib:${LD_LIBRARY_PATH}

#RUN sed -i 's/video\/x-raw(memory:VASurface)/video\/x-raw/g' /home/kpi/workload/workload-config/pipelines/aibox-pipeline.json && \
#sed -i 's/tune=3//g' /home/kpi/workload/workload-config/pipelines/aibox-pipeline.json && \
#sed -i 's/,height=720,width=1280//g'  /home/kpi/workload/workload-config/pipelines/aibox-pipeline.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/pipelines/aibox-pipeline.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-measured-aibox-low-na-avc-cpu.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-measured-aibox-low-na-avc-gpu.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-measured-aibox-mid-na-avc-cpu.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-measured-aibox-mid-na-avc-gpu.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-proxy-aiboxTheo-low-na-avc-cpu.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-proxy-aiboxTheo-low-na-avc-gpu.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-proxy-aiboxTheo-mid-na-avc-cpu.json && \
#sed -i 's/"vaapi"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-proxy-aiboxTheo-mid-na-avc-gpu.json && \
#sed -i 's/"vaapi-surface-sharing"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-proxy-aiboxTheo-low-na-avc-gpu.json && \
#sed -i 's/"vaapi-surface-sharing"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-proxy-aiboxTheo-mid-na-avc-gpu.json && \
#sed -i 's/"vaapi-surface-sharing"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-measured-aibox-low-na-avc-gpu.json && \
#sed -i 's/"vaapi-surface-sharing"/"auto"/g' /home/kpi/workload/workload-config/nvr-adl-measured-aibox-mid-na-avc-gpu.json
#
#RUN jq 'del(.subPipelines.aibox_mid_pipeline_rtspsrc.elements[] | select(.elementName == "gvawatermark") )' \
#/home/kpi/workload/workload-config/pipelines/aibox-pipeline.json | tee /tmp/aibox-pipeline.json && \
#cp /tmp/aibox-pipeline.json /home/kpi/workload/workload-config/pipelines/aibox-pipeline.json
#RUN jq 'del(.subPipelines.aibox_mid_pipeline_filesrc.elements[] | select(.elementName == "gvawatermark") )' \
#/home/kpi/workload/workload-config/pipelines/aibox-pipeline.json | tee /tmp/aibox-pipeline.json && \
#cp /tmp/aibox-pipeline.json /home/kpi/workload/workload-config/pipelines/aibox-pipeline.json
#RUN jq 'del(.subPipelines.theo_mid_pipeline.elements[] | select(.elementName == "gvawatermark") )' \
#/home/kpi/workload/workload-config/pipelines/aibox-pipeline.json | tee /tmp/aibox-pipeline.json && \
#cp /tmp/aibox-pipeline.json /home/kpi/workload/workload-config/pipelines/aibox-pipeline.json

#RUN apt install -y \
#libgstreamer1.0-0-dbg gstreamer1.0-libav-dbg gstreamer1.0-plugins-bad-dbg gstreamer1.0-plugins-base-dbg gstreamer1.0-plugins-good-dbg gstreamer1.0-plugins-ugly-dbg

COPY run.sh /home/kpi/run.sh
COPY pipeline-eflow.sh /home/kpi/pipeline-eflow.sh
COPY aibox.js /home/kpi/workload/pipelineExecutor/aibox.js
RUN sed -i 's!//console.log(pipeline.cmd)!console\.log\(pipeline\.cmd\)!g' /home/kpi/workload/pipelineExecutor/pipeline-executor.js


COPY video/svet_clip_416p_4mbps_00_1.h264_enc /home/kpi/datasets/video/svet_clip_416p_4mbps_00_1.h264_enc
COPY video/svet_clip_416p_4mbps_00_1.h264 /home/kpi/datasets/video/svet_clip_416p_4mbps_00_1.h264

COPY dockerfile_nvr_release_eflow_gst /home/kpi/dockerfile



WORKDIR /home/kpi
ENTRYPOINT ["/bin/bash", "./run.sh"]

