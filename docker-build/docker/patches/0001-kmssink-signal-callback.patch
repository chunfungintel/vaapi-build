From b3fccc92262a9b29da08072cded3539031cd2192 Mon Sep 17 00:00:00 2001
From: bfbingfeng <bingfeng.lu@intel.com>
Date: Fri, 8 Jul 2022 16:45:24 +0700
Subject: [PATCH] kmssink-signal-callback

---
 .../gst-plugins-bad/sys/kms/gstkmssink.c      | 47 ++++++++++++++++---
 .../gst-plugins-bad/sys/kms/gstkmssink.h      |  3 ++
 2 files changed, 44 insertions(+), 6 deletions(-)

diff --git a/subprojects/gst-plugins-bad/sys/kms/gstkmssink.c b/subprojects/gst-plugins-bad/sys/kms/gstkmssink.c
index 788cefc069..c3db48fdf9 100644
--- a/subprojects/gst-plugins-bad/sys/kms/gstkmssink.c
+++ b/subprojects/gst-plugins-bad/sys/kms/gstkmssink.c
@@ -165,9 +165,28 @@ gst_kms_sink_expose (GstVideoOverlay * overlay)
   gst_kms_sink_show_frame (GST_VIDEO_SINK (self), NULL);
 }
 
+static void
+gst_kms_sink_set_window_handle (GstVideoOverlay * overlay, guintptr id)
+{
+  GstKMSSink *self = GST_KMS_SINK (overlay);
+
+  g_return_if_fail (self->fd < 0);
+  g_return_if_fail (!self->is_running);
+
+  /* If the id is 0, we use an internal device fd */
+  if (id == 0) {
+    self->fd = -1;
+    self->is_internal_fd = TRUE;
+  } else {
+    self->fd = (gint) id;
+    self->is_internal_fd = FALSE;
+  }
+}
+
 static void
 gst_kms_sink_video_overlay_init (GstVideoOverlayInterface * iface)
 {
+  iface->set_window_handle = gst_kms_sink_set_window_handle;
   iface->expose = gst_kms_sink_expose;
   iface->set_render_rectangle = gst_kms_sink_set_render_rectangle;
 }
@@ -729,10 +748,17 @@ gst_kms_sink_start (GstBaseSink * bsink)
   pres = NULL;
   plane = NULL;
 
-  if (self->devname || self->bus_id)
-    self->fd = drmOpen (self->devname, self->bus_id);
-  else
-    self->fd = kms_open (&self->devname);
+   /* notify application to set device fd handle now */
+  if (self->fd < 0)
+    gst_video_overlay_prepare_window_handle (GST_VIDEO_OVERLAY (self));
+
+  /* open our own internal device fd if application did not */
+  if (self->is_internal_fd) {
+    if (self->devname || self->bus_id)
+      self->fd = drmOpen (self->devname, self->bus_id);
+    else
+      self->fd = kms_open (&self->devname);
+  }
   if (self->fd < 0)
     goto open_failed;
 
@@ -823,6 +849,8 @@ retry_find_plane:
   gst_kms_sink_update_connector_properties (self);
   gst_kms_sink_update_plane_properties (self);
 
+  self->is_running = TRUE;
+
   ret = TRUE;
 
 bail:
@@ -838,8 +866,11 @@ bail:
     drmModeFreeResources (res);
 
   if (!ret && self->fd >= 0) {
-    drmClose (self->fd);
+    if (self->is_internal_fd) {
+      drmClose (self->fd);
+    }
     self->fd = -1;
+    self->is_running = FALSE;
   }
 
   return ret;
@@ -945,9 +976,11 @@ gst_kms_sink_stop (GstBaseSink * bsink)
   }
 
   if (self->fd >= 0) {
-    drmClose (self->fd);
+    if (self->is_internal_fd)
+      drmClose (self->fd);
     self->fd = -1;
   }
+  self->is_running = FALSE;
 
   GST_OBJECT_LOCK (bsink);
   self->hdisplay = 0;
@@ -1906,6 +1939,8 @@ static void
 gst_kms_sink_init (GstKMSSink * sink)
 {
   sink->fd = -1;
+  sink->is_internal_fd = TRUE;
+  sink->is_running = FALSE;
   sink->conn_id = -1;
   sink->plane_id = -1;
   sink->can_scale = TRUE;
diff --git a/subprojects/gst-plugins-bad/sys/kms/gstkmssink.h b/subprojects/gst-plugins-bad/sys/kms/gstkmssink.h
index 428c057e77..a64be2e75d 100644
--- a/subprojects/gst-plugins-bad/sys/kms/gstkmssink.h
+++ b/subprojects/gst-plugins-bad/sys/kms/gstkmssink.h
@@ -93,6 +93,9 @@ struct _GstKMSSink {
   /* reconfigure info if driver doesn't scale */
   GstVideoRectangle pending_rect;
   gboolean reconfigure;
+
+  gboolean is_internal_fd;
+  gboolean is_running;
 };
 
 struct _GstKMSSinkClass {
-- 
2.34.1

